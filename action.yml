name: 'Ngrok Tunnel Action'
description: 'Tunnel traffic from within a Github Action runner'

branding:
  icon: 'compass'
  color: 'red'

inputs:
  timeout:  
    description: 'Ngrok tunnel deployment timeout'
    default: '1h'
  tunnel_type:
    description: 'Type of Ngrok tunnel, tcp or http'
    required: true
    default: 'tcp'
  port:
    description: 'The port to forward traffic to'
    required: true
  ngrok_download_url:
    description: 'Ngrok download URL'
    required: true
    default: 'https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz'
  ngrok_authtoken:
    description: 'Ngrok authorization token'
    required: true
    
outputs:
  tunnel-url:
    description: "Deployed Ngrok tunnel URL"
    value: ${{ steps.print-tunnel-url.outputs.tunnel-url }}
    
runs:
  using: "composite"
  steps:
    - name: Download ngrok
      shell: bash
      run: |
        wget ${{ inputs.ngrok_download_url }} -O ngrok.tgz
        tar xf ngrok.tgz
        sudo cp ngrok /usr/local/bin/ngrok

    - name: Configure ngrok
      shell: bash
      run: |
        sudo mkdir -p /etc/ngrok
        cat > /tmp/ngrok.yml << EOF
        version: "2"
        authtoken: ${{ inputs.ngrok_authtoken }}
        tunnels:
          garm:
            proto: ${{ inputs.tunnel_type }}
            addr: ${{ inputs.port }}
        EOF
        sudo mv /tmp/ngrok.yml /etc/ngrok/ngrok.yml
        sudo /usr/local/bin/ngrok service install --config=/etc/ngrok/ngrok.yml
      
    - id: print-tunnel-url
      run: echo "::set-output name=tunnel-url::$( curl -s http://127.0.0.1:4040/api/tunnels | jq -r ".tunnels[0].public_url" )"
      shell: bash
